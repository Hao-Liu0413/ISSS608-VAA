{
  "hash": "3381c485c3ccc594f20a6ed7b8bbc6f4",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take_Home_Exercise01\"\ndate: \"\"\ndate-modified: \"last-modified\"\nformat: html\neditor: visual\nexecute: \n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n## 1. Overview\n\nThis first take-home exercise aims to provide a detailed visualization of Singapore's demographic structure in 2024. Three visual representations will be described in this project.\n\n### 1.1 Setting the scene\n\nA local online media company that publishes daily content on digital platforms is planning to release an article on demographic structures and distribution of Singapore in 2024.\n\n### 1.2. Data structure\n\nThe *Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024* dataset, shared by [Department of Statistics, Singapore (DOS)](https://www.singstat.gov.sg/), is composed by 5 main columns:\n\n+----------------+----------------+--------------------------------------------------------------------------------------------------------------------+--------------------------+\n| Column         | Type           | Description                                                                                                        | Example                  |\n+================+================+====================================================================================================================+==========================+\n| Planning Area  | Text           | One of the 55 official planning areas designated by URA.                                                           | Central Area             |\n+----------------+----------------+--------------------------------------------------------------------------------------------------------------------+--------------------------+\n| Subzone        | Text           | A finer subdivision within each planning area (e.g. neighbourhood or precinct name).                               | Chinatown                |\n+----------------+----------------+--------------------------------------------------------------------------------------------------------------------+--------------------------+\n| Age            | Text           | Single-year age categories plus special labels for youngest (“Under 1”) and oldest (“65 and over”, “90 and over”). | Under 1; 27; 65 and over |\n+----------------+----------------+--------------------------------------------------------------------------------------------------------------------+--------------------------+\n| Sex            | Text           | Resident gender—exactly two values: “Male” or “Female”.                                                            | Female                   |\n+----------------+----------------+--------------------------------------------------------------------------------------------------------------------+--------------------------+\n| 2024           | Text→Numeric   | Resident count for June 2024. Imported as text (formatting) then cast to numeric for analysis.                     | “10356” → 10356          |\n+----------------+----------------+--------------------------------------------------------------------------------------------------------------------+--------------------------+\n\n### 1.3 The Designing Tool\n\nAll data wrangling and visualization in this project leverage the modern **tidyverse** ecosystem plus several purpose-built extensions.\n\n## 2. Data cleaning\n\n### 2.1 Load the necessary packages\n\n+----------------------------+-----------------------------------------------------------------------------------------------------------------+\n| Package                    | Description                                                                                                     |\n+============================+=================================================================================================================+\n| matrixStats                | Provides optimized, vectorized functions for row‐ and column‐wise summaries on matrices.                        |\n+----------------------------+-----------------------------------------------------------------------------------------------------------------+\n| readxl                     | Used to import Excel files (.xls and .xlsx) into R data frames without requiring Java or external dependencies. |\n+----------------------------+-----------------------------------------------------------------------------------------------------------------+\n| dplyr                      | A grammar of data manipulation.                                                                                 |\n+----------------------------+-----------------------------------------------------------------------------------------------------------------+\n| stringr                    | A consistent wrapper around R’s string‐processing functions, built on the {stringi} engine.                     |\n+----------------------------+-----------------------------------------------------------------------------------------------------------------+\n| readr                      | Provides functions for reading flat files (CSV, TSV, FWf).                                                      |\n+----------------------------+-----------------------------------------------------------------------------------------------------------------+\n| ggplot2                    | Implements the “Grammar of Graphics” for creating complex, multi‐layered visualizations via a coherent API.     |\n+----------------------------+-----------------------------------------------------------------------------------------------------------------+\n| ggrepel                    | An add‐on to ggplot2 that smartly repels text and label annotations so they do not overlap.                     |\n+----------------------------+-----------------------------------------------------------------------------------------------------------------+\n| scales                     | Provides a suite of functions for transforming and formatting axis breaks, labels, and legends.                 |\n+----------------------------+-----------------------------------------------------------------------------------------------------------------+\n| patchwork                  | Used for assembling multiple ggplot2 plots into complex layouts without resorting to low‐level grid hacks.      |\n+----------------------------+-----------------------------------------------------------------------------------------------------------------+\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(matrixStats)\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(readr)\nlibrary(ggplot2)\nlibrary(ggrepel)\nlibrary(scales)\nlibrary(patchwork)\n```\n:::\n\n\n\n### 2.2 data selection and transformation\n\nThe dataset is loaded into environment by eliminating those rows with values \"Total\" for the reason that it could construct a distortion of data analysis at individual-area or individual-age level.\n\nThe imported data ('Population') has been converted into numeric format that ensures the following algebraic calculation (sum, average, or counts).\n\nMany values of column 'Age' has been transformed:\n\n1\\. “Under x” entries (e.g. “Under 1”) become age 0.\n\n2\\. “Over x” or “x and over” (e.g. “65 and over”) are parsed to the base number (65).\n\nAny rows where the population or parsed age turned into NA are removed. This guards against stray text labels or malformed entries that slipped past the earlier filters.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Read in data and drop all “Total” summary rows\ndf_clean <- read_excel(\"respopagesex2024e.xlsx\") %>%\n  filter(\n    `Planning Area` != \"Total\",\n    Subzone         != \"Total\",\n    Sex             != \"Total\"\n  ) %>%\n  \n  # 2. Convert population to numeric\n  mutate(\n    Population = as.numeric(`2024`),\n    \n    # 3. Parse Age into a single-year numeric\n    Age_numeric = case_when(\n      str_detect(Age, regex(\"under\",    ignore_case = TRUE)) ~ 0,\n      str_detect(Age, regex(\"over|and over\", ignore_case = TRUE)) ~ parse_number(Age),\n      TRUE ~ as.numeric(Age)\n    )\n  ) %>%\n  \n  # 4. Remove any rows that failed conversion\n  filter(\n    !is.na(Population),\n    !is.na(Age_numeric)\n  )\n\n# 5. Inspect\nglimpse(df_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 37,243\nColumns: 7\n$ `Planning Area` <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\"~\n$ Subzone         <chr> \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"A~\n$ Age             <chr> \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\",~\n$ Sex             <chr> \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Fema~\n$ `2024`          <chr> \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"30\", ~\n$ Population      <dbl> 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30~\n$ Age_numeric     <dbl> 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, ~\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(df_clean, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 x 7\n   `Planning Area` Subzone             Age   Sex   `2024` Population Age_numeric\n   <chr>           <chr>               <chr> <chr> <chr>       <dbl>       <dbl>\n 1 Ang Mo Kio      Ang Mo Kio Town Ce~ 0     Males 10             10           0\n 2 Ang Mo Kio      Ang Mo Kio Town Ce~ 0     Fema~ 10             10           0\n 3 Ang Mo Kio      Ang Mo Kio Town Ce~ 1     Males 10             10           1\n 4 Ang Mo Kio      Ang Mo Kio Town Ce~ 1     Fema~ 10             10           1\n 5 Ang Mo Kio      Ang Mo Kio Town Ce~ 2     Males 10             10           2\n 6 Ang Mo Kio      Ang Mo Kio Town Ce~ 2     Fema~ 10             10           2\n 7 Ang Mo Kio      Ang Mo Kio Town Ce~ 3     Males 10             10           3\n 8 Ang Mo Kio      Ang Mo Kio Town Ce~ 3     Fema~ 10             10           3\n 9 Ang Mo Kio      Ang Mo Kio Town Ce~ 4     Males 30             30           4\n10 Ang Mo Kio      Ang Mo Kio Town Ce~ 4     Fema~ 10             10           4\n```\n\n\n:::\n:::\n\n\n\n## 3 Objective and research question definition\n\n### 3.1 National Age–Sex Structure for 2024\n\n**Research Questions:**\n\n-    How does Singapore’s overall population pyramid look in mid-2024?\n\n-    Which age cohorts are unusually large (“bulges”) or small (“gaps”)?\n\n-    Are there sex-specific patterns (e.g. male-heavy vs. female-heavy at certain ages)?\n\n**Analytical Approach:**\n\n1.   **Aggregate** the cleaned dataset by `Age_numeric` and `Sex`, summing `Population`.\n\n2.   **Normalize**: express each bar as a percentage of total male or female population to highlight relative bulges.\n\n3.   **Identify Extremes**: compute the top 3 largest cohorts and the smallest (\\<1 %) cohorts for annotation.\n\n4.  **Interpret**: link any bulges/gaps to known demographic drivers (e.g. baby-boom years, lower birth cohorts, migration waves).\n\n### 3.2 Age Distributions by Planning Area (and Subzone)\n\n**Research Questions:**\n\n-    Which planning areas have a youthful profile (large share of under-25s)?\n\n-    Which areas are “grey” clusters (e.g. \\> 25 % aged 65+)?\n\n-    How do the shapes of these area-level pyramids differ from the national profile?\n\n**Analytical Approach:**\n\n1.   **Stratify**: for each of a selected set of planning areas (or all 55, if feasible), tabulate `Population` by `Age_numeric`.\n\n2.   **Compute Shares**: convert raw counts to percentages within each area.\n\n3.  **Compare**: use small-multiple histograms or ridgeline plots to place each area’s curve alongside the national benchmark.\n\n4.   **Cluster**: optionally cluster areas by their age-distribution vectors (e.g. via k-means) to group “young hubs” vs. “mature suburbs.”\n\n### 3.3 Spatial Patterns: Median Age & Population Density\n\n**Research Questions:**\n\n-    Where are the youngest vs. oldest planning-area populations located?\n\n-    How does median age correlate with population density across areas?\n\n-   Can we spot “retirement clusters” (high median age, low density) vs. “youth clusters” (low median age, high density)?\n\n**Analytical Approach:**\n\n1.   **Compute Metrics** per planning area:\n\n    -    **Median Age**: the 50 th percentile of `Age_numeric` weighted by `Population`.\n\n    -    **Population Density**: total population ÷ land area (km²).\n\n    -    **Dependency Ratio**: (pop 0–14 + pop 65+) ÷ pop 15–64.\n\n2.   **Map**: join these metrics to a Singapore planning-area shapefile.\n\n3.   **Visualize**:\n\n    -    **Choropleth** of median age.\n\n    -   **Bubble overlay** (or secondary choropleth) for density or dependency ratio.\n\n4.   **Analysis**: compute spatial correlations (e.g. Moran’s I) to detect clustering.\n\n### 3.4 Visualization Deliverables\n\n+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n| +-------------------------------+-------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+ |\n| | Chart Type                    | Purpose                                                                                                           | Data & Metrics                                              | Key Features                                                                                           | |\n| +===============================+===================================================================================================================+=============================================================+========================================================================================================+ |\n| | **Population Pyramid**        | Reveal the national age–sex structure and pinpoint bulges/gaps.                                                   | Age-by-sex population aggregates (counts and % shares).     | Back-to-back bars, cohort annotations, % scale on x-axis.                                              | |\n| +-------------------------------+-------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+ |\n| | **Small-multiple Histograms** | Compare the shape of age distributions across selected planning areas (or subzones) against the national profile. | Area-level age shares; national benchmark.                  | Facets or ridgelines, aligned age axis, color-coded by area.                                           | |\n| +-------------------------------+-------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+ |\n| | **Choropleth Map**            | Show spatial patterns in median age, dependency ratio, or population density across planning areas.               | Median age; density (pop/km²); dependency ratio (optional). | Multi-layer map: fill = median age; bubble size or opacity = density; interactive tooltips (optional). | |\n| +-------------------------------+-------------------------------------------------------------------------------------------------------------------+-------------------------------------------------------------+--------------------------------------------------------------------------------------------------------+ |\n+------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+\n\n## 4 Visualization elaboration\n\n### 4.1 Visualization 1 (National Age–Sex Structure for 2024)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Build the pyramid data\npyramid_df <- df_clean %>%\n  group_by(Sex, Age_numeric) %>%\n  summarise(Pop = sum(Population, na.rm = TRUE), .groups = \"drop\") %>%\n  mutate(\n    PopSigned = if_else(Sex == \"Male\", -Pop, Pop),\n    PopAbs    = abs(PopSigned)\n  )\n\n# 2. Compute median age and the single top “bulge” cohort\nmed_age <- weightedMedian(df_clean$Age_numeric, w = df_clean$Population)\n\nbulge_df <- pyramid_df %>%\n  group_by(Age_numeric) %>%\n  summarise(Total = sum(PopAbs), .groups = \"drop\") %>%\n  slice_max(Total, n = 1)\n\n# 3. Plot\nggplot(pyramid_df, aes(x = Age_numeric, y = PopSigned, fill = Sex)) +\n  geom_col(width = 1, color = \"white\") +\n  \n  # median‐age line (becomes horizontal after coord_flip)\n  geom_vline(xintercept = med_age, linetype = \"dashed\", color = \"grey40\") +\n  annotate(\"text\",\n           x     = med_age + 2,\n           y     = 0,\n           label = paste0(\"Median age: \", med_age),\n           angle = 90, vjust = -0.5, size = 3) +\n  \n  # bulge arrow + label\n  geom_segment(data = bulge_df,\n               aes(x = Age_numeric, xend = Age_numeric,\n                   y = 0, yend = -Total * 0.6),\n               arrow  = arrow(length = unit(0.2, \"cm\")),\n               colour = \"darkred\",\n               inherit.aes = FALSE) +\n  geom_text(data = bulge_df,\n            aes(x = Age_numeric + 2,\n                y = -Total * 0.6,\n                label = paste0(\"Peak cohort:\\nAge \", Age_numeric)),\n            hjust = 0, size = 3, colour = \"darkred\",\n            inherit.aes = FALSE) +\n  \n  # scales, colors, flip\n  scale_fill_brewer(palette = \"Set2\") +\n  scale_y_continuous(labels = abs) +\n  coord_flip() +\n  \n  # labels & theme\n  labs(\n    title    = \"Enhanced Singapore Population Pyramid (2024)\",\n    subtitle = \"Median age & largest cohort annotated\",\n    x        = \"Age (years)\",\n    y        = \"Population\",\n    fill     = NULL\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position       = \"top\",\n    panel.grid.major.y    = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](Take_Home_Exercise01_files/figure-html/viz-pyramid-enhanced-1.png){width=768}\n:::\n:::\n\n\n\n::: callout-note\nThe 2024 Singapore population pyramid reveals a distinctly “double-bulge” structure and a modest tilt toward an aging profile. The dashed horizontal line marks the overall median age of 42, reflecting that half the population is older than early‐forties. The largest single cohort, annotated at age 35, stands out prominently—likely a millennial “echo” of high-birth years in the late 1980s. A secondary, smaller peak appears around age 55–60, hinting at a post-war baby-boom echo. In contrast, there is a noticeable trough in the very youngest ages (under 5), suggesting declining birth rates in recent years.\n\nSex differences are also evident: although both sides mirror each other through most working-age groups, the female bars extend further at ages 70+, illustrating higher female longevity. Male and female distributions converge between ages 20–40, indicating balanced labor-force cohorts. Overall, the chart underscores Singapore’s transition to an older population, highlights cohort‐specific “bulges” at 35 and 55, and flags a shrinking base of young children.\n:::\n\n### 4.2 Visualization 2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Compute shares by Planning Area\ndep_pa <- df_clean %>%\n  group_by(`Planning Area`) %>%\n  summarise(\n    youth_share   = sum(Population[Age_numeric < 15], na.rm=TRUE) / sum(Population),\n    elderly_share = sum(Population[Age_numeric >= 65], na.rm=TRUE) / sum(Population),\n    .groups = \"drop\"\n  )\n\n# 2a. Top 10 youngest areas (highest youth_share)\np_young_pa <- dep_pa %>%\n  slice_max(youth_share, n = 10) %>%\n  mutate(`Planning Area` = reorder(`Planning Area`, youth_share)) %>%\n  ggplot(aes(y = `Planning Area`, x = youth_share)) +\n    geom_col(fill = \"#2ca25f\") +\n    scale_x_continuous(labels = percent_format(1)) +\n    labs(\n      title = \"Top 10 Youngest Planning Areas\",\n      x     = \"Share under 15\",\n      y     = NULL\n    ) +\n    theme_minimal(base_size = 11)\n\n# 2b. Top 10 oldest areas (highest elderly_share)\np_old_pa <- dep_pa %>%\n  slice_max(elderly_share, n = 10) %>%\n  mutate(`Planning Area` = reorder(`Planning Area`, elderly_share)) %>%\n  ggplot(aes(y = `Planning Area`, x = elderly_share)) +\n    geom_col(fill = \"#de2d26\") +\n    scale_x_continuous(labels = percent_format(1)) +\n    labs(\n      title = \"Top 10 Oldest Planning Areas\",\n      x     = \"Share 65 and over\",\n      y     = NULL\n    ) +\n    theme_minimal(base_size = 11)\n\n# 3. Display side by side\np_young_pa + p_old_pa\n```\n\n::: {.cell-output-display}\n![](Take_Home_Exercise01_files/figure-html/pa-young-old-bar-1.png){width=960}\n:::\n:::\n\n\n\n### 4.3 Visualization 3\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Compute metrics\ndep_shares <- df_clean %>%\n  group_by(`Planning Area`) %>%\n  summarise(\n    youth_share   = sum(Population[Age_numeric < 15], na.rm=TRUE) / sum(Population),\n    elderly_share = sum(Population[Age_numeric >= 65], na.rm=TRUE) / sum(Population),\n    total_pop     = sum(Population),\n    median_age    = matrixStats::weightedMedian(Age_numeric, w = Population),\n    .groups       = \"drop\"\n  )\n\n# 2. National means & correlation\nmean_youth   <- mean(dep_shares$youth_share)\nmean_elderly <- mean(dep_shares$elderly_share)\ncorr_val     <- cor(dep_shares$youth_share, dep_shares$elderly_share)\n\n# 3. Plot\nggplot(dep_shares, aes(\n    x = youth_share,\n    y = elderly_share,\n    size  = total_pop,\n    color = median_age\n  )) +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"grey40\", linetype = \"dotted\") +\n  geom_vline(xintercept = mean_youth,   linetype = \"dashed\", color = \"grey60\") +\n  geom_hline(yintercept = mean_elderly, linetype = \"dashed\", color = \"grey60\") +\n  geom_point(alpha = 0.8) +\n  geom_text_repel(\n    aes(label = `Planning Area`),\n    size       = 3,\n    max.overlaps = 20\n  ) +\n  scale_x_continuous(labels = percent_format(1)) +\n  scale_y_continuous(labels = percent_format(1)) +\n  scale_size(range = c(2, 10), labels = comma_format(accuracy = 1), name = \"Total pop\") +\n  scale_color_viridis_c(option = \"magma\", name = \"Median age\") +\n  annotate(\n    \"text\", \n    x    = 0.30, \n    y    = 0.20, \n    label= paste0(\"r = \", round(corr_val, 2)),\n    size = 4, \n    color= \"black\"\n  ) +\n  labs(\n    title    = \"Youth vs. Elderly Shares by Planning Area\",\n    subtitle = \"Bubble size ~ total population; Color ~ median age\",\n    x        = \"Share of residents under 15\",\n    y        = \"Share of residents 65 and over\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = \"right\",\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](Take_Home_Exercise01_files/figure-html/youth-elderly-enhanced-1.png){width=768}\n:::\n:::\n",
    "supporting": [
      "Take_Home_Exercise01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}