{
  "hash": "a43af8eb3ad3f9654b65c202a7ea45bb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take_Home_Exercise01\"\ndate: \"\"\ndate-modified: \"last-modified\"\nformat: html\neditor: visual\nexecute: \n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n## 1. Overview\n\nThis first take-home exercise aims to provide a detailed visualization of Singapore's demographic structure in 2024.\n\n## 2. Data structure\n\nThe *Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024* dataset, shared by [Department of Statistics, Singapore (DOS)](https://www.singstat.gov.sg/), is composed by 5 main columns:\n\n-   **Planning Area**: Geographic planning areas in Singapore.\n\n-   **Subzone**: Subdivision within each Planning Area.\n\n-   **Age**: Individual ages of residents.\n\n-   **Sex**: Gender of residents (Male, Female).\n\n-   **2024**: Resident population count as of June 2024.\n\n## 3. Data cleaning\n\n### load the neccessary packages\n\n### final dataset production\nThe dataset is loaded into environment by eliminating those rows with\"Total values\" for the reason that it could construct a\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(matrixStats)\nlibrary(readxl)\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(readr)    # for parse_number\nlibrary(ggplot2)\nlibrary(ggrepel)\n\n# 1. Read in data and drop all “Total” summary rows\ndf_clean <- read_excel(\"respopagesex2024e.xlsx\") %>%\n  filter(\n    `Planning Area` != \"Total\",\n    Subzone         != \"Total\",\n    Sex             != \"Total\"\n  ) %>%\n  \n  # 2. Convert population to numeric\n  mutate(\n    Population = as.numeric(`2024`),\n    \n    # 3. Parse Age into a single-year numeric\n    Age_numeric = case_when(\n      str_detect(Age, regex(\"under\",    ignore_case = TRUE)) ~ 0,\n      str_detect(Age, regex(\"over|and over\", ignore_case = TRUE)) ~ parse_number(Age),\n      TRUE ~ as.numeric(Age)\n    )\n  ) %>%\n  \n  # 4. Remove any rows that failed conversion\n  filter(\n    !is.na(Population),\n    !is.na(Age_numeric)\n  )\n\n# 5. Inspect\nglimpse(df_clean)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 37,243\nColumns: 7\n$ `Planning Area` <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\"~\n$ Subzone         <chr> \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"A~\n$ Age             <chr> \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\",~\n$ Sex             <chr> \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Fema~\n$ `2024`          <chr> \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"10\", \"30\", ~\n$ Population      <dbl> 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30~\n$ Age_numeric     <dbl> 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, ~\n```\n\n\n:::\n\n```{.r .cell-code}\nhead(df_clean, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 10 x 7\n   `Planning Area` Subzone             Age   Sex   `2024` Population Age_numeric\n   <chr>           <chr>               <chr> <chr> <chr>       <dbl>       <dbl>\n 1 Ang Mo Kio      Ang Mo Kio Town Ce~ 0     Males 10             10           0\n 2 Ang Mo Kio      Ang Mo Kio Town Ce~ 0     Fema~ 10             10           0\n 3 Ang Mo Kio      Ang Mo Kio Town Ce~ 1     Males 10             10           1\n 4 Ang Mo Kio      Ang Mo Kio Town Ce~ 1     Fema~ 10             10           1\n 5 Ang Mo Kio      Ang Mo Kio Town Ce~ 2     Males 10             10           2\n 6 Ang Mo Kio      Ang Mo Kio Town Ce~ 2     Fema~ 10             10           2\n 7 Ang Mo Kio      Ang Mo Kio Town Ce~ 3     Males 10             10           3\n 8 Ang Mo Kio      Ang Mo Kio Town Ce~ 3     Fema~ 10             10           3\n 9 Ang Mo Kio      Ang Mo Kio Town Ce~ 4     Males 30             30           4\n10 Ang Mo Kio      Ang Mo Kio Town Ce~ 4     Fema~ 10             10           4\n```\n\n\n:::\n:::\n\n\n\n## Objective and research question definition\n\n### 1. What is the national age–sex structure for 2024?\n\n-   How does the shape of Singapore’s population pyramid look in 2024?\n\n-   Are there notable “bulges” or gaps in certain cohorts?\n\n### 2. How do age distributions differ by planning area (and subzone)?\n\n-   Which areas skew younger (e.g., many children and young adults)?\n\n-   Which areas skew older (a high share of 65+ residents)?\n\n### 3. What spatial patterns emerge in median age and population density?\n\n-   Map median age and density at the planning-area level to highlight “young hubs” vs. “retirement clusters.”\n\n### Visualization Deliverables\n\n| Chart Type | Purpose |\n|------------------------------------|------------------------------------|\n| **Population Pyramid** | Show national age–sex structure (and optionally for selected planning areas). |\n| **Small-multiple Histograms** | Compare age distributions side-by-side for a set of planning areas/subzones. |\n| **Choropleth Map** | Color each planning area by median age, dependency ratio, or total population density. |\n\n## Visualization elaboration (pratical implementation)\n\n### measures definition\n\nWe will compute the following key metrics:\n\n-   **Age_numeric**: single-year age parsed from `Age` (e.g. “65 and over” → 65)\n\n-   **Population**: numeric population count from the `2024` column\n\n-   **Youth population**: sum of `Population` for `Age_numeric < 15`\n\n-   **Working-age population**: sum for `15 <= Age_numeric <= 64`\n\n-   **Elderly population**: sum for `Age_numeric >= 65`\n\n-   **Dependency ratio**: `(Youth + Elderly) / WorkingAge`\n\n-   **Sex ratio**: `Males / Females` per age or geography\n\n-   **Median Age**: median of `Age_numeric`, weighted by `Population`\n\n### visualization 1\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Build pyramid_df explicitly\npyramid_df <- df_clean %>%\n  group_by(Sex, Age_numeric) %>%\n  summarise(\n    Pop = sum(Population, na.rm = TRUE),\n    .groups = \"drop\"\n  ) %>%\n  mutate(\n    # make male values negative for the left side of the pyramid\n    PopSigned = if_else(Sex == \"Male\", -Pop, Pop),\n    PopAbs    = abs(PopSigned)\n  )\n\n# 2. Compute summary stats\nmed_age <- weightedMedian(df_clean$Age_numeric, w = df_clean$Population)\nbulge <- pyramid_df %>%\n  group_by(Age_numeric) %>%\n  summarise(Tot = sum(PopAbs), .groups=\"drop\") %>%\n  slice_max(Tot, n=1)\nbulge_age  <- bulge$Age_numeric\nbulge_size <- bulge$Tot\n\n# 3. Plot\nggplot(pyramid_df, aes(x = Age_numeric, y = PopSigned, fill = Sex)) +\n  geom_col(width = 1, color = \"white\") +\n  \n  # Median‐age line\n  geom_vline(xintercept = med_age, linetype = \"dashed\", color = \"grey40\") +\n  annotate(\"text\",\n           x     = med_age + 2,\n           y     = 0,\n           label = paste0(\"Median age: \", med_age),\n           angle = 90,\n           vjust = -0.5,\n           size  = 3) +\n  \n  # Bulge annotation\n  geom_segment(aes(x = bulge_age, xend = bulge_age,\n                   y = 0, yend = -bulge_size/2),\n               arrow = arrow(length = unit(0.2, \"cm\")),\n               colour = \"darkred\") +\n  annotate(\"text\",\n           x     = bulge_age + 3,\n           y     = -bulge_size/2,\n           label = paste0(\"Peak cohort:\\nAge \", bulge_age),\n           hjust = 0,\n           size  = 3,\n           colour= \"darkred\") +\n  \n  # Color and scales\n  scale_fill_brewer(palette = \"Set2\") +\n  scale_y_continuous(labels = abs) +\n  coord_flip() +\n  labs(\n    title    = \"Enhanced Singapore Population Pyramid (2024)\",\n    subtitle = \"Median age & largest cohort annotated\",\n    x        = \"Age (years)\",\n    y        = \"Population\",\n    fill     = NULL\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(legend.position = \"top\")\n```\n\n::: {.cell-output-display}\n![](Take_Home_Exercise01_files/figure-html/viz-pyramid-enhanced-1.png){width=768}\n:::\n:::\n\n\n\n### visualization 2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(patchwork)\nlibrary(readr)\n\n# 1. Compute shares by Planning Area\ndep_pa <- df_clean %>%\n  group_by(`Planning Area`) %>%\n  summarise(\n    youth_share   = sum(Population[Age_numeric < 15], na.rm=TRUE) / sum(Population),\n    elderly_share = sum(Population[Age_numeric >= 65], na.rm=TRUE) / sum(Population),\n    .groups = \"drop\"\n  )\n\n# 2a. Top 10 youngest areas (highest youth_share)\np_young_pa <- dep_pa %>%\n  slice_max(youth_share, n = 10) %>%\n  mutate(`Planning Area` = reorder(`Planning Area`, youth_share)) %>%\n  ggplot(aes(y = `Planning Area`, x = youth_share)) +\n    geom_col(fill = \"#2ca25f\") +\n    scale_x_continuous(labels = percent_format(1)) +\n    labs(\n      title = \"Top 10 Youngest Planning Areas\",\n      x     = \"Share under 15\",\n      y     = NULL\n    ) +\n    theme_minimal(base_size = 11)\n\n# 2b. Top 10 oldest areas (highest elderly_share)\np_old_pa <- dep_pa %>%\n  slice_max(elderly_share, n = 10) %>%\n  mutate(`Planning Area` = reorder(`Planning Area`, elderly_share)) %>%\n  ggplot(aes(y = `Planning Area`, x = elderly_share)) +\n    geom_col(fill = \"#de2d26\") +\n    scale_x_continuous(labels = percent_format(1)) +\n    labs(\n      title = \"Top 10 Oldest Planning Areas\",\n      x     = \"Share 65 and over\",\n      y     = NULL\n    ) +\n    theme_minimal(base_size = 11)\n\n# 3. Display side by side\np_young_pa + p_old_pa\n```\n\n::: {.cell-output-display}\n![](Take_Home_Exercise01_files/figure-html/pa-young-old-bar-1.png){width=960}\n:::\n:::\n\n\n\n### visualization 3\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Compute metrics\ndep_shares <- df_clean %>%\n  group_by(`Planning Area`) %>%\n  summarise(\n    youth_share   = sum(Population[Age_numeric < 15], na.rm=TRUE) / sum(Population),\n    elderly_share = sum(Population[Age_numeric >= 65], na.rm=TRUE) / sum(Population),\n    total_pop     = sum(Population),\n    median_age    = matrixStats::weightedMedian(Age_numeric, w = Population),\n    .groups       = \"drop\"\n  )\n\n# 2. National means & correlation\nmean_youth   <- mean(dep_shares$youth_share)\nmean_elderly <- mean(dep_shares$elderly_share)\ncorr_val     <- cor(dep_shares$youth_share, dep_shares$elderly_share)\n\n# 3. Plot\nggplot(dep_shares, aes(\n    x = youth_share,\n    y = elderly_share,\n    size  = total_pop,\n    color = median_age\n  )) +\n  geom_smooth(method = \"lm\", se = FALSE, color = \"grey40\", linetype = \"dotted\") +\n  geom_vline(xintercept = mean_youth,   linetype = \"dashed\", color = \"grey60\") +\n  geom_hline(yintercept = mean_elderly, linetype = \"dashed\", color = \"grey60\") +\n  geom_point(alpha = 0.8) +\n  geom_text_repel(\n    aes(label = `Planning Area`),\n    size       = 3,\n    max.overlaps = 20\n  ) +\n  scale_x_continuous(labels = percent_format(1)) +\n  scale_y_continuous(labels = percent_format(1)) +\n  scale_size(range = c(2, 10), labels = comma_format(accuracy = 1), name = \"Total pop\") +\n  scale_color_viridis_c(option = \"magma\", name = \"Median age\") +\n  annotate(\n    \"text\", \n    x    = 0.30, \n    y    = 0.20, \n    label= paste0(\"r = \", round(corr_val, 2)),\n    size = 4, \n    color= \"black\"\n  ) +\n  labs(\n    title    = \"Youth vs. Elderly Shares by Planning Area\",\n    subtitle = \"Bubble size ~ total population; Color ~ median age\",\n    x        = \"Share of residents under 15\",\n    y        = \"Share of residents 65 and over\"\n  ) +\n  theme_minimal(base_size = 12) +\n  theme(\n    legend.position = \"right\",\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](Take_Home_Exercise01_files/figure-html/youth-elderly-enhanced-1.png){width=768}\n:::\n:::\n",
    "supporting": [
      "Take_Home_Exercise01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}